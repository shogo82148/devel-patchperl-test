name: build on linux-arm64

on:
  workflow_dispatch:
    inputs:
      perl-versions:
        description: perl versions to build (JSON Array)
        required: false
        default: ""

jobs:
  list:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - id: set-matrix
        name: list available perl versions
        run: |
          if [ -n "$PERL_VERSIONS" ]; then
            echo "matrix=$(printenv PERL_VERSIONS | jq -c '{perl: .}')" >> "$GITHUB_OUTPUT"
          else
            echo "matrix=$(<versions/perl.json jq -c '{perl: .}')" >> "$GITHUB_OUTPUT"
          fi
        env:
          PERL_VERSIONS: ${{ github.event.inputs.perl-versions }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  patchperl:
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: "5.42"
      - name: install deps
        run: cpanm -n Dist::Zilla
      - name: build Devel::PatchPerl
        run: |
          git clone https://github.com/bingos/devel-patchperl.git
          cd devel-patchperl
          dzil authordeps --missing | cpanm -n
          dzil build
      - uses: actions/upload-artifact@v4
        with:
          name: Devel-PatchPerl.tar.gz
          path: Devel-PatchPerl-*.tar.gz

  build:
    runs-on: ubuntu-22.04-arm
    needs:
      - list
      - patchperl
    permissions:
      contents: read
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.list.outputs.matrix)}}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: "5.42"
      - uses: actions/download-artifact@v4
        with:
          name: Devel-PatchPerl.tar.gz
      - name: install deps
        run: cpanm -n Devel-PatchPerl-*.tar.gz
      - name: build perl
        run: ./build-perl.pl
